server:
  port: 9000

spring:
  security:
    oauth2:
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
          github-idp:
            provider: github
            client-id: ${GITHUB_CLIENT_ID:github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:github-client-secret}
            scope: user:email, read:user
            client-name: Sign in with GitHub
        provider:
          google:
            user-name-attribute: email
          github:
            user-name-attribute: login
      authorizationserver:
        registration:
          messaging-client:
            client-id: messaging-client
            client-secret: "{noop}secret"
            client-authentication-method:
              - client_secret_basic
            authorization-grant-type:
              - authorization_code
              - refresh_token
              - client_credentials
            redirect-uri:
              - http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc
              - http://127.0.0.1:8080/authorized
            scope:
              - openid
              - message.read
              - message.write
            client-settings:
              require-authorization-consent: true

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
#    org.springframework.boot.autoconfigure: DEBUG
